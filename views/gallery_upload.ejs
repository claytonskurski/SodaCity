<!-- Bootstrap and other dependencies -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">

<div class="container mt-5 mb-5">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h1 class="text-center h3 mb-0">Upload Gallery Images</h1>
                </div>
                <div class="card-body">
                    <form id="uploadForm" action="/gallery/upload" method="POST" enctype="multipart/form-data">
                        <!-- Title -->
                        <div class="mb-3">
                            <label for="title" class="form-label">Gallery Title</label>
                            <input type="text" class="form-control" id="title" name="title" required maxlength="100" 
                                placeholder="Enter a title for this group of images">
                        </div>

                        <!-- Description -->
                        <div class="mb-3">
                            <label for="description" class="form-label">Description (Optional)</label>
                            <textarea class="form-control" id="description" name="description" rows="3" maxlength="500" 
                                placeholder="Enter a description for these images"></textarea>
                        </div>

                        <!-- Drag & Drop Zone -->
                        <div class="upload-zone mb-4">
                            <div id="dropZone" class="drop-zone text-center p-5 border-2 border-dashed position-relative">
                                <input type="file" id="galleryImages" name="galleryImages" multiple accept="image/*" class="file-input" />
                                <i class="fas fa-cloud-upload-alt fa-3x mb-3"></i>
                                <h4>Drag & Drop Images Here</h4>
                                <p class="text-muted">or click to select files</p>
                                <small class="d-block text-muted mt-2">
                                    Accepted formats: JPG, PNG, GIF, WEBP | Max size: 10MB per image
                                </small>
                            </div>
                        </div>

                        <!-- Preview Zone -->
                        <div id="previewZone" class="preview-zone mb-4">
                            <div class="selected-files row g-3">
                                <!-- Preview images will be inserted here -->
                            </div>
                        </div>

                        <!-- Upload Progress -->
                        <div id="uploadProgress" class="progress mb-3 d-none">
                            <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>

                        <!-- Submit Button -->
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg px-5" id="uploadButton">
                                <i class="fas fa-upload me-2"></i>Upload Images
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.drop-zone {
    border: 2px dashed #ccc;
    border-radius: 8px;
    transition: all 0.3s ease;
    background-color: #f8f9fa;
    cursor: pointer;
}

.drop-zone:hover, .drop-zone.dragover {
    border-color: #0d6efd;
    background-color: #e9ecef;
}

.file-input {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    cursor: pointer;
}

.preview-image-container {
    position: relative;
    height: 150px;
    overflow: hidden;
    border-radius: 8px;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.preview-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.remove-image {
    position: absolute;
    top: 5px;
    right: 5px;
    background: rgba(255,255,255,0.9);
    border-radius: 50%;
    padding: 5px;
    cursor: pointer;
    transition: all 0.2s ease;
}

.remove-image:hover {
    background: #dc3545;
    color: white;
}

@media (max-width: 768px) {
    .drop-zone {
        padding: 2rem !important;
    }
    
    .preview-image-container {
        height: 120px;
    }
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const dropZone = document.getElementById('dropZone');
    const fileInput = document.getElementById('galleryImages');
    const previewZone = document.querySelector('.selected-files');
    const uploadForm = document.getElementById('uploadForm');
    const progressBar = document.querySelector('.progress-bar');
    const uploadProgress = document.getElementById('uploadProgress');
    
    // Drag and drop handlers
    ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, preventDefaults, false);
        document.body.addEventListener(eventName, preventDefaults, false);
    });

    ['dragenter', 'dragover'].forEach(eventName => {
        dropZone.addEventListener(eventName, highlight, false);
    });

    ['dragleave', 'drop'].forEach(eventName => {
        dropZone.addEventListener(eventName, unhighlight, false);
    });

    dropZone.addEventListener('drop', handleDrop, false);
    fileInput.addEventListener('change', handleFiles, false);

    function preventDefaults(e) {
        e.preventDefault();
        e.stopPropagation();
    }

    function highlight(e) {
        dropZone.classList.add('dragover');
    }

    function unhighlight(e) {
        dropZone.classList.remove('dragover');
    }

    function handleDrop(e) {
        const dt = e.dataTransfer;
        const files = dt.files;
        handleFiles({ target: { files: files } });
    }

    function handleFiles(e) {
        const files = [...e.target.files];
        files.forEach(previewFile);
    }

    function previewFile(file) {
        if (!file.type.startsWith('image/')) return;

        const reader = new FileReader();
        reader.readAsDataURL(file);
        reader.onloadend = function() {
            const div = document.createElement('div');
            div.className = 'col-6 col-md-4 col-lg-3';
            div.innerHTML = `
                <div class="preview-image-container">
                    <img src="${reader.result}" class="preview-image" />
                    <div class="remove-image">
                        <i class="fas fa-times"></i>
                    </div>
                </div>
            `;
            
            div.querySelector('.remove-image').onclick = function() {
                div.remove();
                updateFileInput();
            };
            
            previewZone.appendChild(div);
        }
    }

    function updateFileInput() {
        // This function would need to be implemented to sync the visual state with the input
        // It's complex to directly manipulate FileList, so we might need a different approach
        // for removing files, such as maintaining a separate array of files to upload
    }

    uploadForm.onsubmit = async function(e) {
        e.preventDefault();
        
        const formData = new FormData(uploadForm);
        uploadProgress.classList.remove('d-none');
        
        try {
            const response = await fetch('/gallery/upload', {
                method: 'POST',
                body: formData
            });
            
            if (response.ok) {
                window.location.href = '/gallery';
            } else {
                throw new Error('Upload failed');
            }
        } catch (error) {
            alert('Error uploading images. Please try again.');
            console.error('Upload error:', error);
        }
    };
});
</script> 